import React, { useState } from 'react';
import FacebookIcon from './icons/FacebookIcon';
import DiscordIcon from './icons/DiscordIcon';
import { GoogleGenAI } from '@google/genai';


const Contact: React.FC = () => {
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [loading, setLoading] = useState(false);
    const [responseMessage, setResponseMessage] = useState('');
    const [error, setError] = useState('');


    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        if(!name || !email) return;

        setLoading(true);
        setResponseMessage('');
        setError('');

        try {
            const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });
            
            const prompt = `M·ªôt ng∆∞·ªùi d√πng t√™n l√† "${name}" v·ªõi email "${email}" v·ª´a ƒëƒÉng k√Ω tr·∫£i nghi·ªám s·ªõm tr√≤ ch∆°i "LeNin Chess" c·ªßa ch√∫ng t√¥i. H√£y so·∫°n m·ªôt email x√°c nh·∫≠n th√¢n thi·ªán v√† chuy√™n nghi·ªáp g·ª≠i cho h·ªç. C·∫£m ∆°n h·ªç ƒë√£ quan t√¢m, x√°c nh·∫≠n r·∫±ng h·ªç ƒë√£ ƒë∆∞·ª£c ghi danh v√†o danh s√°ch ch·ªù b·∫£n Beta, v√† cho h·ªç bi·∫øt r·∫±ng ch√∫ng t√¥i s·∫Ω s·ªõm li√™n h·ªá l·∫°i v·ªõi th√¥ng tin chi ti·∫øt. Ph·∫£n h·ªìi ph·∫£i ho√†n to√†n b·∫±ng ti·∫øng Vi·ªát. B·∫Øt ƒë·∫ßu b·∫±ng l·ªùi ch√†o ƒë·∫øn ${name}.`;

            const response = await ai.models.generateContent({
                model: 'gemini-2.5-flash',
                contents: prompt,
            });

            setResponseMessage(response.text);
            setName('');
            setEmail('');
        } catch (err) {
            console.error("Error calling Gemini API:", err);
            setError('R·∫•t ti·∫øc, ƒë√£ c√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh ƒëƒÉng k√Ω. Vui l√≤ng th·ª≠ l·∫°i sau.');
        } finally {
            setLoading(false);
        }
    };

    return (
        <section id="contact" className="py-20 bg-white dark:bg-dark-bg">
            <div className="container mx-auto px-6">
                <div className="text-center mb-16">
                    <h2 className="text-4xl font-black text-gray-900 dark:text-white uppercase">
                        ƒêƒÉng k√Ω & <span className="text-brand-gold">Li√™n h·ªá</span>
                    </h2>
                    <p className="text-gray-600 dark:text-gray-400 mt-2">Tham gia ch∆°i th·ª≠ v√† k·∫øt n·ªëi v·ªõi ƒë·ªôi ng≈© ph√°t tri·ªÉn.</p>
                </div>

                <div className="max-w-4xl mx-auto bg-gray-100 dark:bg-gray-900/50 p-8 rounded-lg shadow-2xl ring-1 ring-gray-200 dark:ring-gray-700">
                    <div className="grid md:grid-cols-2 gap-12">
                        <div>
                            <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">ƒêƒÉng k√Ω tr·∫£i nghi·ªám s·ªõm</h3>
                            <p className="text-gray-600 dark:text-gray-400 mb-6">
                                ƒêi·ªÅn email c·ªßa b·∫°n ƒë·ªÉ nh·∫≠n th√¥ng b√°o khi game ra m·∫Øt v√† c√≥ c∆° h·ªôi tham gia phi√™n b·∫£n Beta.
                            </p>
                            <form onSubmit={handleSubmit} className="space-y-4">
                                <div>
                                    <label htmlFor="name" className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">T√™n c·ªßa b·∫°n</label>
                                    <input
                                        type="text"
                                        id="name"
                                        value={name}
                                        onChange={(e) => setName(e.target.value)}
                                        className="w-full bg-white dark:bg-gray-800 text-gray-900 dark:text-white px-4 py-2 rounded-md border-2 border-gray-300 dark:border-gray-700 focus:outline-none focus:border-brand-gold focus:ring-2 focus:ring-brand-gold/50 transition-all"
                                        required
                                        disabled={loading}
                                    />
                                </div>
                                <div>
                                    <label htmlFor="email" className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Email</label>
                                    <input
                                        type="email"
                                        id="email"
                                        value={email}
                                        onChange={(e) => setEmail(e.target.value)}
                                        className="w-full bg-white dark:bg-gray-800 text-gray-900 dark:text-white px-4 py-2 rounded-md border-2 border-gray-300 dark:border-gray-700 focus:outline-none focus:border-brand-gold focus:ring-2 focus:ring-brand-gold/50 transition-all"
                                        required
                                        disabled={loading}
                                    />
                                </div>
                                <button type="submit" className="w-full bg-brand-gold hover:bg-amber-600 text-gray-900 font-bold py-3 px-6 rounded-md transition-transform duration-300 ease-in-out hover:scale-105 disabled:bg-gray-400 dark:disabled:bg-gray-500 disabled:cursor-not-allowed disabled:scale-100" disabled={loading}>
                                     {loading ? (
                                        <div className="flex items-center justify-center">
                                            <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-gray-900" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                                <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                                                <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                            </svg>
                                            <span>ƒêang x·ª≠ l√Ω...</span>
                                        </div>
                                    ) : (
                                        'ƒêƒÉng k√Ω ngay'
                                    )}
                                </button>
                            </form>
                             {responseMessage && (
                                <div className="mt-4 p-4 bg-green-100 dark:bg-green-900/50 border-l-4 border-green-500 text-green-800 dark:text-green-200 rounded-r-lg animate-fade-in-up">
                                    <h4 className="font-bold">ƒêƒÉng k√Ω th√†nh c√¥ng!</h4>
                                    <p className="whitespace-pre-wrap mt-2">{responseMessage}</p>
                                </div>
                            )}
                            {error && (
                                <div className="mt-4 p-4 bg-red-100 dark:bg-red-900/50 border-l-4 border-red-500 text-red-800 dark:text-red-200 rounded-r-lg animate-fade-in-up">
                                     <h4 className="font-bold">L·ªói!</h4>
                                    <p className="mt-2">{error}</p>
                                </div>
                            )}
                        </div>
                        
                        <div className="flex flex-col justify-between">
                            <div>
                                <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">Th√¥ng tin li√™n h·ªá</h3>
                                <div className="space-y-4 text-gray-700 dark:text-gray-300">
                                     <p>
                                        <strong>üìß Email:</strong> 
                                        <a href="mailto:Chuongnn12.work@gmail.com" className="ml-2 text-brand-gold hover:underline">Chuongnn12.work@gmail.com</a>
                                    </p>
                                   <a href="https://www.facebook.com/meiinamm/" target="_blank" rel="noopener noreferrer" className="flex items-center space-x-3 text-gray-700 dark:text-gray-300 hover:text-brand-gold transition-colors">
                                       <FacebookIcon className="h-5 w-5 text-brand-gold" />
                                        <span>Facebook LeNin Chess</span>
                                   </a>
                                   <a href="https://discord.gg/gtg2XhRu" target="_blank" rel="noopener noreferrer" className="flex items-center space-x-3 text-gray-700 dark:text-gray-300 hover:text-brand-gold transition-colors">
                                        <DiscordIcon className="h-5 w-5 text-brand-gold" />
                                        <span>C·ªông ƒë·ªìng Discord</span>
                                   </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    );
};

export default Contact;